min_rec <- min(df1[i,])
numeric_vec[i] <- min_rec
})
mat1 <- matrix( sample(1:1000,50000,replace=F),ncol=2)
df1<-data.frame(mat1)
numeric_vec <- numeric(nrow(df1))
system.time (for (i in c(1:nrow(df1))){
min_rec <- min(df1[i,])
numeric_vec[i] <- min_rec
})
mat1 <- matrix( sample(1:1000,50000,replace=T),ncol=2)
df1<-data.frame(mat1)
numeric_vec <- numeric(nrow(df1))
system.time (for (i in c(1:nrow(df1))){
min_rec <- min(df1[i,])
numeric_vec[i] <- min_rec
})
apply(df1,1,FUN=min)
a<-apply(df1,1,FUN=min)
system.time(a<-apply(df1,1,FUN=min))
mat1 <- matrix( sample(1:1000,5000000,replace=T),ncol=2)
df1<-data.frame(mat1)
numeric_vec <- numeric(nrow(df1))
system.time(a<-apply(df1,1,FUN=min))
?apply
iris
irissquare(x) <- function (x){
return (x[1]^2 + x[2]^2 + x[3]^2 + x[4]^2)
}
irissquare <- function (x){
return (x[1]^2 + x[2]^2 + x[3]^2 + x[4]^2)
}
apply(iris,1,irissquare)
return (x[5]^2 + x[2]^2 + x[3]^2 + x[4]^2)
irissquare <- function (x){
return (x[5]^2 + x[2]^2 + x[3]^2 + x[4]^2)
}
apply(iris,1,irissquare)
head(iris)
apply(iris[,c(1:4)],1,irissquare)
apply(iris[,c(1:4)],1,FUN=irissquare(x))
apply(iris[,c(1:4)],1,FUN=irissquare)
iris[,c(1:4)]
irissquare <- function (x){
return (x[1]^2 + x[2]^2 + x[3]^2 + x[4]^2)
}
apply(iris[,c(1:4)],1,FUN=irissquare)
install.packages(DAAGtxtras)
library(DAAGxtras)
install.packages("RCurl")
install.packages("XML")
library(‘RCurl’)
library("RCurl")
library("XML")
Capacity = getURL("GET https://rmsautomotive.visualstudio.com/DefaultCollection/RMS/CAP%20%Invincible/_apis/work/TeamSettings/Iterations/17.05.B/Capacities?api-version=1.0-preview.2")
Capacity = getURL("https://rmsautomotive.visualstudio.com/DefaultCollection/RMS/CAP%20%Invincible/_apis/work/TeamSettings/Iterations/17.05.B/Capacities?api-version=1.0-preview.2")
Capacity
Capacity = getURL("https://rmsautomotive.visualstudio.com/DefaultCollection/RMS/CAP%20%Invincible/_apis/work/TeamSettings/Iterations/17.05.B/Capacities?api-version=1.0-preview.1")
Capacity
Capacity = getURL("https://rmsautomotive.visualstudio.com/DefaultCollection/RMS/CAP Invincible/_apis/work/TeamSettings/Iterations/17.05.B/Capacities?api-version=1.0-preview.1")
Capacity
Capacity = getURL("https://rmsautomotive.visualstudio.com/DefaultCollection/RMS/Warriors/_apis/work/TeamSettings/Iterations/17.05.B/Capacities?api-version=1.0-preview.1")
Capacity
Capacity = getURL("https://rmsautomotive.visualstudio.com/DefaultCollection/RMS/Warriors/_apis/work/TeamSettings/Iterations/17.05.B/Capacities?api-version=2.2")
Capacity
Capacity = getURL("https://rmsautomotive.visualstudio.com/DefaultCollection/RMS/Warriors/_apis/work/TeamSettings/Iterations/17.05.B/Capacities?api-version=2.2")
Capacity
pnorm(77,74,13)
1 - pnorm(77,74,(13/sqrt(36)))
77 + 1.96*(13/sqrt(36))
77 - 1.96*(13/sqrt(36))
z = 1.96*(48.5/sqrt(14))
z
77 + 1.96*(48.5/sqrt(14))
77 + 1.96*(48.5/sqrt(14))
77 -  1.96*(48.5/sqrt(14))
157.1428571+ 1.96*(48.5/sqrt(14))
157.1428571-  1.96*(48.5/sqrt(14))
library("lubridate")
setwd("C:/Veera/R/SmartParking")
Lots = read.csv("Smart_Parking_Lots.csv")
Restrictions = read.csv("Smart_Parking_Restrictions.csv")
Stays = read.csv("Smart_Parking_Stays.csv")
temp = Stays
temp$end = ymd_hms(strptime(temp$Departed,"%d/%m/%Y %I:%M:%S %p"))
temp$begin = ymd_hms(strptime(temp$Arrived,"%d/%m/%Y %I:%M:%S %p"))
temp$parkedtime = as.numeric(as.duration(as.interval(temp$begin, temp$end)))/60
temp$hour = hour(temp$begin)
new = data.frame(temp, bins=cut(temp$hour  , breaks=6, labels=FALSE))
new$label[new$bins == 1] = "0:00-3:00"
new$label[new$bins == 2] = "4:00-7:00"
new$label[new$bins == 3] = "8:00-11:00"
new$label[new$bins == 4] = "12:00-15:00"
new$label[new$bins == 5] = "16:00-19:00"
new$label[new$bins == 6] = "20:00-23:00"
new$label <- factor(new$label, levels = new$label[order(new$bins)])
ggplot(new, aes(x=label, fill="red")) +
geom_bar(stat='count', position='dodge') +
labs(x = "Hours") +
theme_light()
library("ggplot2")
ggplot(new, aes(x=label, fill="red")) +
geom_bar(stat='count', position='dodge') +
labs(x = "Hours") +
theme_light()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x = "Hours") +
theme_light()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
scale_x_continuous(breaks=c(1:15)) +
labs(x = "Hours") +
theme_light()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
scale_x_continuous("Hours", breaks=c(1:15)) +
theme_light()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
theme_light()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
scale_x_continuous() +
theme_light()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
theme_light()
str(Stays)
ggplot(new, aes(x=label)) +
geom_bar(stat='No. Of Stays', position='dodge') +
theme_light()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(y="No. of Stays")
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays")
jpeg(paste0("StaysByHoursOfTheDay.jpg"))
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays")
dev.off()
p <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point()
p + annotate("text", x = 4, y = 25, label = "Some text")
p + annotate("text", x = 2:5, y = 25, label = "Some text")
p + annotate("rect", xmin = 3, xmax = 4.2, ymin = 12, ymax = 21,
alpha = .2)
p + annotate("segment", x = 2.5, xend = 4, y = 15, yend = 25,
colour = "blue")
p + annotate("pointrange", x = 3.5, y = 20, ymin = 12, ymax = 28,
colour = "red", size = 1.5)
p + annotate("text", x = 2:3, y = 20:21, label = c("my label", "label 2"))
p + annotate("text", x = 4, y = 25, label = "italic(R) ^ 2 == 0.75",
parse = TRUE)
p + annotate("text", x = 4, y = 25,
label = "paste(italic(R) ^ 2, \" = .75\")", parse = TRUE)
p <- ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars)))
p + geom_text()
p + geom_text(check_overlap = TRUE)
p + geom_label()
p + geom_text(size = 10)
p + geom_point() + geom_text(hjust = 0, nudge_x = 0.05)
p + geom_point() + geom_text(vjust = 0, nudge_y = 0.5)
p + geom_point() + geom_text(angle = 45)
p + geom_text(family = "Times New Roman")
p + geom_text(aes(colour = factor(cyl)))
p + geom_text(aes(colour = factor(cyl))) +
scale_colour_discrete(l = 40)
p <- ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars)))
p + geom_text(family = "Times New Roman")
p <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point()
p + annotate("text", x = 4, y = 25, label = "Some text")
p <- ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars)))
p + geom_text(aes(colour = factor(cyl)))
p + geom_text(aes(size = wt)) + scale_radius(range = c(3,6))
p + geom_text(aes(label = paste(wt, "^(", cyl, ")", sep = "")),
parse = TRUE)
g <- ggplot(mpg, aes(class))
g + geom_bar()
g + geom_bar(aes(weight = displ))
df <- data.frame(trt = c("a", "b", "c"), outcome = c(2.3, 1.9, 3.2))
ggplot(df, aes(trt, outcome)) +
geom_col()
ggplot(df, aes(trt, outcome)) +
geom_point()
df <- data.frame(x = rep(c(2.9, 3.1, 4.5), c(5, 10, 4)))
ggplot(df, aes(x)) + geom_bar()
ggplot(df, aes(x)) + geom_histogram(binwidth = 0.5)
g + geom_bar(aes(fill = drv))
g + geom_bar(aes(fill = drv), position = "dodge")
g + geom_bar(aes(fill = drv), position = "fill")
reorder_size <- function(x) {
factor(x, levels = names(sort(table(x))))
42 geom_bin2d
}
reorder_size <- function(x) {
factor(x, levels = names(sort(table(x))))
}
ggplot(mpg, aes(reorder_size(class))) + geom_bar()
jpeg(paste0("StaysByHoursOfTheDay.jpg"))
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
geom_text(stat='bin',aes(label=..count..),vjust=-1)
theme_light()
p <- ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars)))
p + geom_text()
p + geom_text(check_overlap = TRUE)
p + geom_label()
p + geom_text(size = 10)
p + geom_point() + geom_text(hjust = 0, nudge_x = 0.05)
p + geom_point() + geom_text(vjust = 0, nudge_y = 0.5)
jpeg(paste0("StaysByHoursOfTheDay.jpg"))
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
geom_text(aes(label=..count..),vjust=-1)
str(Stays)
str(new)
order(new$bins)
new$bins
order(new$bins)
order(new$bins)
ChickWeight
mtcars
str(mtcars)
order(mtcars$names)
new$label[order(new$bins)]
new$label[order(new$bins)]
factor(new$label, levels = new$label[order(new$bins)])
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
geom_text(aes(label='label'),vjust=-1)
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
geom_text(aes(y = (..count..)),vjust=-1)
p <- ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars)))
p + geom_text()
h
p + geom_text(check_overlap = TRUE)
p + geom_label()
p + geom_text(size = 10)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point()
p + annotate("text", x = 4, y = 25, label = "Some text")
p + annotate("text", x = 2:5, y = 25, label = "Some text")
p + annotate("rect", xmin = 3, xmax = 4.2, ymin = 12, ymax = 21,
alpha = .2)
p
p <- ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars)))
p + geom_text()
p + geom_text(check_overlap = TRUE)
p + geom_label()
x <- c('Product A', 'Product B', 'Product C')
y <- c(20, 15, 23)
text <- c('27% market share', '24% market share', '19% market share')
data <- data.frame(x, y, text)
p <- plot_ly(data, x = ~x, y = ~y, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "January 2013 Sales Report",
xaxis = list(title = ""),
yaxis = list(title = ""),
annotations = list(x = x, y = y, text = y,
xanchor = 'center', yanchor = 'bottom',
showarrow = FALSE))
p
setwd("C:/RMS Laptop/RMS/NDP")
library(ggplot2)
NDP <- read.csv("NDPData4Sep2017.csv")
NDP = subset(NDP, NDP$Work.Item.Type== "Task" & NDP$Created.By != "Ravichandran Ramachandran" & NDP$Created.By != "Veerappan Palaniappan" & NDP$Assigned.To != "Veerappan Palaniappan"  & NDP$Assigned.To != "Sunilbabu Chimata" )
NDP$Age <- as.numeric(difftime(Sys.Date(),as.Date(strptime(NDP$Created.Date,"%m/%d/%Y")), units="days"))
NDPByTag = subset(NDP, NDP$Work.Item.Type == 'Task')
NDPByState = subset(NDP, NDP$State != 'Done')
jpeg(paste0("ByState",Sys.Date(), ".jpg"))
StatusTable <-table(NDPByState$State)
bp <- barplot(StatusTable, width=.4,col=terrain.colors(7),las=3,beside=3)
text(bp,0, round(StatusTable,1),cex=0.8, pos=3)
title(main="Defects By State",ylab="Count")
dev.off()
DevAndQA = c("B.Kabita","Imam Baig","karthikeyanm", "Praneeth Thopram", "Sirisha Parlapalli","Rajakumar Sudalaikan", "Sunilbabu Chimata", "Kalyan.Ramisetti", "Sivashankar Jagadeesan", "v.mohan", "vinothk", "Chris Charlton","Dominik Kouker")
jpeg(paste0("ByPerson",Sys.Date(), ".jpg"))
NDPByUser = subset(NDP, NDP$State != 'Done' & NDP$State != 'Removed' & NDP$Assigned.To %in% DevAndQA)
str(NDPByUser)
write.csv (NDPByUser, file="testing.csv")
NDPByUser = read.csv("testing.csv")
ggplot(NDPByUser, aes(Age, fill=Assigned.To, label = 'Assigned.To')) + geom_histogram(binwidth=1)
counts <- table(NDPByUser$Priority, NDPByUser$Assigned.To)
bp=barplot(counts, main="Defects by person and priority",
xlab="", col=cm.colors(3),
legend = rownames(counts), beside=3, las=3)
text(bp,0, round(counts,1),cex=0.8, pos=3)
dev.off()
hist(NDPByUser$Age, breaks = 10, col = "orange", labels=TRUE)
p <- ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars)))
p + geom_text()
p + geom_text(check_overlap = TRUE)
p + geom_label()
p + geom_text(size = 10)
p + geom_point() + geom_text(hjust = 0, nudge_x = 0.05)
p + geom_point() + geom_text(vjust = 0, nudge_y = 0.5)
p + geom_point() + geom_text(angle = 45)
p + geom_text(family = "Times New Roman")
p + geom_text(aes(colour = factor(cyl)))
p + geom_text(aes(colour = factor(cyl))) +
scale_colour_discrete(l = 40)
p + geom_label(aes(fill = factor(cyl)), colour = "white", fontface = "bold")
p + geom_text(aes(size = wt))
p + geom_text(aes(size = wt)) + scale_radius(range = c(3,6))
p + geom_text(aes(label = paste(wt, "^(", cyl, ")", sep = "")),
parse = TRUE)
p +
geom_text() +
annotate("text", label = "plot mpg vs. wt", x = 2, y = 15, size = 8, colour = "red")
df <- data.frame(
x = factor(c(1, 1, 2, 2)),
y = c(1, 3, 2, 1),
grp = c("a", "b", "a", "b")
)
ggplot(data = df, aes(x, y, group = grp)) +
geom_col(aes(fill = grp), position = "dodge") +
geom_text(aes(label = y), position = "dodge")
ggplot(data = df, aes(x, y, group = grp)) +
geom_col(aes(fill = grp), position = "dodge") +
geom_text(aes(label = y), position = position_dodge(0.9))
ggplot(data = df, aes(x, y, group = grp)) +
geom_col(aes(fill = grp), position = "dodge") +
geom_text(
aes(label = y, y = y + 0.05),
position = position_dodge(0.9),
vjust = 0
)
ggplot(data = df, aes(x, y, group = grp)) +
geom_col(aes(fill = grp)) +
geom_text(aes(label = y), position = position_stack(vjust = 0.5))
df <- data.frame(
x = c(1, 1, 2, 2, 1.5),
y = c(1, 2, 1, 2, 1.5),
text = c("bottom-left", "bottom-right", "top-left", "top-right", "center")
)
ggplot(df, aes(x, y)) +
geom_text(aes(label = text))
ggplot(df, aes(x, y)) +
geom_text(aes(label = text), vjust = "inward", hjust = "inward")
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
theme_light()
df <- data.frame(
gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30)
)
df
ds <- plyr::ddply(df, "gp", plyr::summarise, mean = mean(y), sd = sd(y))
ggplot(df, aes(gp, y)) +
geom_point() +
geom_point(data = ds, aes(y = mean), colour = 'red', size = 3)
ggplot(df) +
geom_point(aes(gp, y)) +
geom_point(data = ds, aes(gp, mean), colour = 'red', size = 3)
ggplot() +
geom_point(data = df, aes(gp, y)) +
geom_point(data = ds, aes(gp, mean), colour = 'red', size = 3) +
geom_errorbar(
data = ds,
aes(gp, mean, ymin = mean - sd, ymax = mean + sd),
colour = 'red',
width = 0.4
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
theme_light()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
theme_light()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
geom_text(y=counts)+
theme_light()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
geom_text(y=..count..)+
theme_light()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
geom_text(y=count)+
theme_light()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
geom_text(y='count')+
theme_light()
ggplot(new, aes=(x=label)) + geom_bar(stat=bin)
ggplot(new, aes=(x=label)) + geom_bar(stat="bin")
ggplot(new, aes=(x=label)) + geom_bar(stat="bin", binwidth=6)
ggplot(new, aes=(x=label)) + geom_bar(stat="bin") + sta_bin(binwidth=6)
ggplot(new, aes=(x=label)) + geom_bar(stat="bin") + stat_bin(binwidth=6)
ggplot(new, aes=(x=label)) + geom_bar(stat="bin") + stat_bin(bins=6)
ggplot(new, aes=(x=label)) + geom_bar(stat="bin") + stat_bin(x=label, binwidth = 6,bins=6)
ggplot(new, aes=(x=label)) + geom_bar(stat="bin") + stat_bin( binwidth = 6,bins=6)
ggplot(new, aes(x=label)) + geom_bar(stat="bin") + stat_bin( binwidth = 6,bins=6)
ggplot(new, aes(x=label)) + geom_bar(stat="count") + stat_bin( binwidth = 6,bins=6)
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
geom_text(aes(label=count(label)))
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
#geom_text(aes(label=count(label)))
theme_classic()
ggplot(new, aes(x=label)) +
geom_bar(stat='count', position='dodge') +
labs(x="Hours of the day",y="No. of Stays") +
geom_text(aes(label=label)) +
theme_classic()
str(new)
ggplot(new,aes(x=begin, y=parkedtime)) + geom_area()
old=new[1:10000,]
ggplot(old,aes(x=begin, y=parkedtime)) + geom_area()
str(new)
summary(new)
ggplot(old,aes(x=hour, y=parkedtime)) + geom_area()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_point()
summary(old)
order(old$parkedtime,decreasing = T)[1:5]
old[order(old$parkedtime,decreasing = T)[1:5],"parkedtime"]
old[order(old$parkedtime,decreasing = T)[1:10],"parkedtime"]
old[order(old$parkedtime,decreasing = T)[1:10],"parkedtime"]/60
old[order(old$parkedtime,decreasing = T)[1:100],"parkedtime"]/60
ggplot(old,aes(x=hour, y=parkedtime)) + geom_point()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_point() + scale_x_discrete()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_point() + scale_x_discrete(label=hour)
ggplot(old,aes(x=hour, y=parkedtime)) + geom_point() + scale_x_discrete(origin=0,label=hour)
ggplot(old,aes(x=hour, y=parkedtime)) + geom_point() + scale_x_discrete(label=hour)
ggplot(old,aes(x=hour, y=parkedtime)) + geom_point()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_point() _ theme_classic()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_point() + theme_classic()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_area() + theme_classic()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_line() + theme_classic()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_step() + theme_classic()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_text() + theme_classic()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_text(label=hour) + theme_classic()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_text(label=parkedtime) + theme_classic()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_bar() + theme_classic()
ggplot(old,aes(x=hour, y=parkedtime)) + geom_bar(stat='count') + theme_classic()
str(new)
str(Lots)
str(Restrictions)
gsub('(.*/ )|(/..*)', '', a)
a = "$0.80/30 Mins,$1.70/1 Hour"
gsub('(.*/ )|(/..*)', '', a)
gsub('(.*/ )|(/.*)', '', a)
gsub('(.*/ )', '', a)
gsub('(.*/ )|(/.*)', '', a)
gsub('(.*/ )|(//.*)', '', a)
gsub('(.*/ )|(/..*)', '', a)
gsub('(,.*/ )|(/..*)', '', a)
gsub('(/,.*/ )|(/..*)', '', a)
gsub('(.*/ )|(/.*)', '', a)
gsub('(*mins, )|(/.*)', '', a)
a = "$0.80/30 Mins,$1.70/1 Hour"
gsub('(*mins, )|(/.*)', '', a)
gsub('(mins,* )|(/.*)', '', a)
gsub('mins|(/.*)', '', a)
gsub('mins', '', a)
gsub('Mins', '', a)
gsub('(.* )|(/.*)', '', a)
gsub('(.* )|(/.*)', '', a)
gsub('(.*/ )|(/.*)', '', a)
gsub('(.*/)|(/.*)', '', a)
gsub('(/.*)', '', a)
gsub('(.*)', '', a)
gsub('(,.*)|(/.*)', '', a)
gsub('(,.*)', '', a)
gsub('(,.*)', ' ', a)
gsub('(/1.*)', '', a)
gsub('(1.*)', '', a)
gsub('(//1.*)', '', a)
gsub('(\/1.*)', '', a)
gsub('(//1.*)', '', a)
gsub('(/1.*)', '', a)
gsub('(/1.*)|(.*,', '', a)
gsub('(/1.*)|(.*,'), '', a)
gsub('(/1.*)|(.*,)', '', a)
a = "$0.55/30 Mins,$1.20/1 Hour,$2.70/2 Hours,$4.90/3 Hours,$7.60/4 Hours,$8.50/Flat Rate"
gsub('(/.*)', '', a)
a = "$0.55/30 Mins,$1.20/1 Hour,$2.70/2 Hours,$4.90/3 Hours,$7.60/4 Hours,$8.50/Flat Rate"
gsub('(/1.*)|(.*,)', '', a)
a = "$0.55/30 Mins,$1.20/1 Hour,$2.70/2 Hours,$4.90/3 Hours,$7.60/4 Hours,$8.50/Flat Rate"
gsub('(/.*)', '', a)
a = "$0.55/30 Mins,$1.20/1 Hour,$2.70/2 Hours,$4.90/3 Hours,$7.60/4 Hours,$8.50/Flat Rate"
gsub('(/1.*)|(.*,)', '', a)
a = "$0.55/30 Mins,$1.20/1 Hour,$2.70/2 Hours,$4.90/3 Hours,$7.60/4 Hours,$8.50/Flat Rate"
gsub('(/1.*)', '', a)
gsub('(/1.*)|(.*Mins,)', '', a)
a = "$0.55/30 Mins,$1.20/1 Hour,$2.70/2 Hours,$4.90/3 Hours,$7.60/4 Hours,$8.50/Flat Rate"
gsub('(/2.*)|(.*,)', '', a)
gsub('(/2.*)|(.*Hour,)', '', a)
gsub('(/2.*)|(.*2 Hours,)', '', a)
a = "$0.55/30 Mins,$1.20/1 Hour,$2.70/2 Hours,$4.90/3 Hours,$7.60/4 Hours,$8.50/Flat Rate"
gsub('(/2.*)|(.*2 Hours,)', '', a)
gsub('(/3.*)|(.*2 Hours,)', '', a)
a = "$0.55/30 Mins,$1.20/1 Hour,$2.70/2 Hours,$4.90/3 Hours,$7.60/4 Hours,$8.50/Flat Rate"
gsub('(/4.*)|(.*3 Hours,)', '', a)
gsub('(/Flat.*)|(.*4 Hours,)', '', a)
